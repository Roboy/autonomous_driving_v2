<!--
A launch file to start a gezebo simulation and a node that will publish position
of the robot
-->
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="false"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="model_urdf"
       default="$(find simulation)/tricycle/model.urdf"/>
  <arg name="model_name" default="tricycle"/>
  <arg name="model_frame" default="base_link"/>

  <!--We resume the logic in empty_world.launch, changing only the name of the
  world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-x 0 -y 0 -z 0 -unpause -urdf -model $(arg model_name)
        -param robot_description"
        respawn="false" output="screen"/>

  <!-- Start a node that will publish model position and handle
  initial_position command -->
  <node name="gazebo_to_tf" pkg="simulation" type="gazebo_to_tf.py"
        output="screen">
      <param name="model_name" type="string" value="$(arg model_name)"/>
      <param name="model_frame" type="string" value="$(arg model_frame)"/>
  </node>

  <node name="gazebo_initial_pos" pkg="simulation"
        type="handle_initial_pos.py" output="screen">
      <param name="model_name" type="string" value="$(arg model_name)"/>
  </node>

</launch>