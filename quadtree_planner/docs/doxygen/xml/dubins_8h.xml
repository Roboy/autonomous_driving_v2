<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="dubins_8h" kind="file" language="C++">
    <compoundname>dubins.h</compoundname>
    <includedby refid="dubins_8c" local="yes">/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/src/dubins.c</includedby>
    <includedby refid="quadtree__planner_8cpp" local="yes">/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/src/quadtree_planner.cpp</includedby>
    <innerclass refid="structDubinsPath" prot="public">DubinsPath</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="dubins_8h_1accb4315ae86689e8eb5c1e0ba325bc6f" prot="public" static="no">
        <name>EDUBOK</name>
        <initializer>(0)   /* No error */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/include/quadtree_planner/dubins.h" line="48" column="9" bodyfile="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/include/quadtree_planner/dubins.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dubins_8h_1a697854590c1f1c577f3b2c228b2be425" prot="public" static="no">
        <name>EDUBCOCONFIGS</name>
        <initializer>(1)   /* Colocated configurations */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/include/quadtree_planner/dubins.h" line="49" column="9" bodyfile="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/include/quadtree_planner/dubins.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dubins_8h_1a6ab2ef4179b79cdb63457b975c27810a" prot="public" static="no">
        <name>EDUBPARAM</name>
        <initializer>(2)   /* Path parameterisitation error */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/include/quadtree_planner/dubins.h" line="50" column="9" bodyfile="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/include/quadtree_planner/dubins.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dubins_8h_1a28cc9f549e9a4f6bfaec274f2e7c0644" prot="public" static="no">
        <name>EDUBBADRHO</name>
        <initializer>(3)   /* the rho value is invalid */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/include/quadtree_planner/dubins.h" line="51" column="9" bodyfile="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/include/quadtree_planner/dubins.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dubins_8h_1a7137f12da70f2c42801a13f309da4717" prot="public" static="no">
        <name>EDUBNOPATH</name>
        <initializer>(4)   /* no connection between configurations with this word */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/include/quadtree_planner/dubins.h" line="52" column="9" bodyfile="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/include/quadtree_planner/dubins.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="dubins_8h_1a280a02205e2aaba793dabe9e99af372e" prot="public" static="no">
        <name>DubinsPathType</name>
        <enumvalue id="dubins_8h_1a280a02205e2aaba793dabe9e99af372ea0226b11632995cf028f321326046753e" prot="public">
          <name>LSL</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dubins_8h_1a280a02205e2aaba793dabe9e99af372ea298da67ff8599a09829a91ad0ad3069b" prot="public">
          <name>LSR</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dubins_8h_1a280a02205e2aaba793dabe9e99af372ead42c4dffde131a43192521066fde5b76" prot="public">
          <name>RSL</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dubins_8h_1a280a02205e2aaba793dabe9e99af372ea55f2a8836c217e06d45ce53544c8b7d7" prot="public">
          <name>RSR</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dubins_8h_1a280a02205e2aaba793dabe9e99af372ea6b6fb7aaeabc8d24d0b1a4cc1ecae856" prot="public">
          <name>RLR</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dubins_8h_1a280a02205e2aaba793dabe9e99af372ea7d011e0b2bc91bbf45b44ff7cbd12f96" prot="public">
          <name>LRL</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/include/quadtree_planner/dubins.h" line="27" column="1" bodyfile="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/include/quadtree_planner/dubins.h" bodystart="26" bodyend="34"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="dubins_8h_1a974e0cd90344b111080f4f6547d93843" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* DubinsPathSamplingCallback) (double q[3], double t, void *user_data)</definition>
        <argsstring>)(double q[3], double t, void *user_data)</argsstring>
        <name>DubinsPathSamplingCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback function for path sampling</para><para><simplesect kind="note"><para>the q parameter is a configuration </para></simplesect>
<simplesect kind="note"><para>the t parameter is the distance along the path </para></simplesect>
<simplesect kind="note"><para>the user_data parameter is forwarded from the caller </para></simplesect>
<simplesect kind="note"><para>return non-zero to denote sampling should be stopped </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/include/quadtree_planner/dubins.h" line="62" column="1" bodyfile="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/include/quadtree_planner/dubins.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="dubins_8h_1aa7a973ab8d913f35ddb770390c04a138" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dubins_shortest_path</definition>
        <argsstring>(DubinsPath *path, double q0[3], double q1[3], double rho)</argsstring>
        <name>dubins_shortest_path</name>
        <param>
          <type><ref refid="structDubinsPath" kindref="compound">DubinsPath</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>double</type>
          <declname>q0</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>q1</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>rho</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate a path from an initial configuration to a target configuration, with a specified maximum turning radii</para><para>A configuration is (x, y, theta), where theta is in radians, with zero along the line x = 0, and counter-clockwise is positive</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>- the resultant path </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>q0</parametername>
</parameternamelist>
<parameterdescription>
<para>- a configuration specified as an array of x, y, theta </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>q1</parametername>
</parameternamelist>
<parameterdescription>
<para>- a configuration specified as an array of x, y, theta </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rho</parametername>
</parameternamelist>
<parameterdescription>
<para>- turning radius of the vehicle (forward velocity divided by maximum angular velocity) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>- non-zero on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/include/quadtree_planner/dubins.h" line="78" column="1" bodyfile="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/src/dubins.c" bodystart="84" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="dubins_8h_1a66250397a521fe86e07beaca8feb1244" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dubins_path</definition>
        <argsstring>(DubinsPath *path, double q0[3], double q1[3], double rho, DubinsPathType pathType)</argsstring>
        <name>dubins_path</name>
        <param>
          <type><ref refid="structDubinsPath" kindref="compound">DubinsPath</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>double</type>
          <declname>q0</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>q1</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>rho</declname>
        </param>
        <param>
          <type>DubinsPathType</type>
          <declname>pathType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate a path with a specified word from an initial configuration to a target configuration, with a specified turning radius</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>- the resultant path </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>q0</parametername>
</parameternamelist>
<parameterdescription>
<para>- a configuration specified as an array of x, y, theta </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>q1</parametername>
</parameternamelist>
<parameterdescription>
<para>- a configuration specified as an array of x, y, theta </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rho</parametername>
</parameternamelist>
<parameterdescription>
<para>- turning radius of the vehicle (forward velocity divided by maximum angular velocity) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pathType</parametername>
</parameternamelist>
<parameterdescription>
<para>- the specific path type to use </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>- non-zero on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/include/quadtree_planner/dubins.h" line="91" column="1" bodyfile="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/src/dubins.c" bodystart="124" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="dubins_8h_1aab74dd0bb389d87d3c3e46d457cb7ec3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double dubins_path_length</definition>
        <argsstring>(DubinsPath *path)</argsstring>
        <name>dubins_path_length</name>
        <param>
          <type><ref refid="structDubinsPath" kindref="compound">DubinsPath</ref> *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate the length of an initialised path</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>- the path to find the length of </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/include/quadtree_planner/dubins.h" line="98" column="1" bodyfile="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/src/dubins.c" bodystart="146" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="dubins_8h_1a2d942cdfe47872b31ca38537a20d2458" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double dubins_segment_length</definition>
        <argsstring>(DubinsPath *path, int i)</argsstring>
        <name>dubins_segment_length</name>
        <param>
          <type><ref refid="structDubinsPath" kindref="compound">DubinsPath</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the length of a specific segment in an initialized path</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>- the path to find the length of </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>- the segment you to get the length of (0-2) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/include/quadtree_planner/dubins.h" line="106" column="1" bodyfile="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/src/dubins.c" bodystart="156" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="dubins_8h_1a6036bd0c9a693b9ebaaa1d5731856438" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double dubins_segment_length_normalized</definition>
        <argsstring>(DubinsPath *path, int i)</argsstring>
        <name>dubins_segment_length_normalized</name>
        <param>
          <type><ref refid="structDubinsPath" kindref="compound">DubinsPath</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the normalized length of a specific segment in an initialized path</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>- the path to find the length of </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>- the segment you to get the length of (0-2) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/include/quadtree_planner/dubins.h" line="114" column="1" bodyfile="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/src/dubins.c" bodystart="165" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="dubins_8h_1a32c354179c26a54fdb976c7423816098" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DubinsPathType</type>
        <definition>DubinsPathType dubins_path_type</definition>
        <argsstring>(DubinsPath *path)</argsstring>
        <name>dubins_path_type</name>
        <param>
          <type><ref refid="structDubinsPath" kindref="compound">DubinsPath</ref> *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extract an integer that represents which path type was used</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>- an initialised path </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>- one of LSL, LSR, RSL, RSR, RLR or LRL </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/include/quadtree_planner/dubins.h" line="122" column="1" bodyfile="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/src/dubins.c" bodystart="174" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="dubins_8h_1adce56e5f9fc82d4d19f839f03495831f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dubins_path_sample</definition>
        <argsstring>(DubinsPath *path, double t, double q[3])</argsstring>
        <name>dubins_path_sample</name>
        <param>
          <type><ref refid="structDubinsPath" kindref="compound">DubinsPath</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double</type>
          <declname>q</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate the configuration along the path, using the parameter t</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>- an initialised path </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>- a length measure, where 0 &lt;= t &lt; dubins_path_length(path) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>q</parametername>
</parameternamelist>
<parameterdescription>
<para>- the configuration result </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>- non-zero if &apos;t&apos; is not in the correct range </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/include/quadtree_planner/dubins.h" line="132" column="1" bodyfile="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/src/dubins.c" bodystart="203" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="dubins_8h_1a995863c9522407ffe017dfd24c19cd6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dubins_path_sample_many</definition>
        <argsstring>(DubinsPath *path, double stepSize, DubinsPathSamplingCallback cb, void *user_data)</argsstring>
        <name>dubins_path_sample_many</name>
        <param>
          <type><ref refid="structDubinsPath" kindref="compound">DubinsPath</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>double</type>
          <declname>stepSize</declname>
        </param>
        <param>
          <type>DubinsPathSamplingCallback</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Walk along the path at a fixed sampling interval, calling the callback function at each interval</para><para>The sampling process continues until the whole path is sampled, or the callback returns a non-zero value</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>- the path to sample </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stepSize</parametername>
</parameternamelist>
<parameterdescription>
<para>- the distance along the path for subsequent samples </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>- the callback function to call for each sample </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>- optional information to pass on to the callback</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>- zero on successful completion, or the result of the callback </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/include/quadtree_planner/dubins.h" line="147" column="1" bodyfile="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/src/dubins.c" bodystart="245" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="dubins_8h_1ad54cbb8e8982aab12a1b872533f9c0b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dubins_path_endpoint</definition>
        <argsstring>(DubinsPath *path, double q[3])</argsstring>
        <name>dubins_path_endpoint</name>
        <param>
          <type><ref refid="structDubinsPath" kindref="compound">DubinsPath</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>double</type>
          <declname>q</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience function to identify the endpoint of a path</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>- an initialised path </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>q</parametername>
</parameternamelist>
<parameterdescription>
<para>- the configuration result </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/include/quadtree_planner/dubins.h" line="158" column="1" bodyfile="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/src/dubins.c" bodystart="264" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="dubins_8h_1a10e3d51a530a9acfd70eeda51ce51343" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dubins_extract_subpath</definition>
        <argsstring>(DubinsPath *path, double t, DubinsPath *newpath)</argsstring>
        <name>dubins_extract_subpath</name>
        <param>
          <type><ref refid="structDubinsPath" kindref="compound">DubinsPath</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="structDubinsPath" kindref="compound">DubinsPath</ref> *</type>
          <declname>newpath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience function to extract a subset of a path</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>- an initialised path </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>- a length measure, where 0 &lt; t &lt; dubins_path_length(path) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newpath</parametername>
</parameternamelist>
<parameterdescription>
<para>- the resultant path </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/include/quadtree_planner/dubins.h" line="167" column="1" bodyfile="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/src/dubins.c" bodystart="269" bodyend="291"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2008-2018,<sp/>Andrew<sp/>Walker</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DUBINS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DUBINS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>LSL<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>LSR<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>RSL<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>RSR<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>RLR<sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>LRL<sp/>=<sp/>5</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}<sp/>DubinsPathType;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="structDubinsPath" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>initial<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>qi[3];</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>lengths<sp/>of<sp/>the<sp/>three<sp/>segments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>param[3];</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>model<sp/>forward<sp/>velocity<sp/>/<sp/>model<sp/>angular<sp/>velocity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rho;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>path<sp/>type<sp/>described<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>DubinsPathType<sp/>type;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}<sp/><ref refid="structDubinsPath" kindref="compound">DubinsPath</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EDUBOK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>error<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EDUBCOCONFIGS<sp/>(1)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Colocated<sp/>configurations<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EDUBPARAM<sp/><sp/><sp/><sp/><sp/>(2)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Path<sp/>parameterisitation<sp/>error<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EDUBBADRHO<sp/><sp/><sp/><sp/>(3)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>rho<sp/>value<sp/>is<sp/>invalid<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EDUBNOPATH<sp/><sp/><sp/><sp/>(4)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>connection<sp/>between<sp/>configurations<sp/>with<sp/>this<sp/>word<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*DubinsPathSamplingCallback)(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dubins_shortest_path(<ref refid="structDubinsPath" kindref="compound">DubinsPath</ref>*<sp/>path,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q0[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q1[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rho);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dubins_path(<ref refid="structDubinsPath" kindref="compound">DubinsPath</ref>*<sp/>path,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q0[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q1[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rho,<sp/>DubinsPathType<sp/>pathType);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dubins_path_length(<ref refid="structDubinsPath" kindref="compound">DubinsPath</ref>*<sp/>path);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dubins_segment_length(<ref refid="structDubinsPath" kindref="compound">DubinsPath</ref>*<sp/>path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dubins_segment_length_normalized(<sp/><ref refid="structDubinsPath" kindref="compound">DubinsPath</ref>*<sp/>path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">DubinsPathType<sp/>dubins_path_type(<ref refid="structDubinsPath" kindref="compound">DubinsPath</ref>*<sp/>path);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dubins_path_sample(<ref refid="structDubinsPath" kindref="compound">DubinsPath</ref>*<sp/>path,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q[3]);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dubins_path_sample_many(<ref refid="structDubinsPath" kindref="compound">DubinsPath</ref>*<sp/>path,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stepSize,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DubinsPathSamplingCallback<sp/>cb,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dubins_path_endpoint(<ref refid="structDubinsPath" kindref="compound">DubinsPath</ref>*<sp/>path,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q[3]);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dubins_extract_subpath(<ref refid="structDubinsPath" kindref="compound">DubinsPath</ref>*<sp/>path,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/><ref refid="structDubinsPath" kindref="compound">DubinsPath</ref>*<sp/>newpath);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DUBINS_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/maximilian/RoboyRepoDevelPlanning/src/quadtree_planner/include/quadtree_planner/dubins.h"/>
  </compounddef>
</doxygen>
